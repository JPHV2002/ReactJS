{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/React/projeto1/src/templates/Home/index.jsx\";\n//Importação\nimport './styles.css';\nimport { Component } from 'react';\nimport { loadPosts } from '../../utils/load-posts';\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button';\nimport { TextInput } from '../../components/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      allPosts: [],\n      page: 0,\n      postsPerPage: 9,\n      searchValue: ''\n    };\n\n    this.loadMorePosts = () => {\n      const {\n        page,\n        postsPerPage,\n        allPosts,\n        posts\n      } = this.state;\n      const nextPage = page + postsPerPage;\n      const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage);\n      posts.push(...nextPosts);\n      this.setState({\n        posts,\n        page: nextPage\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        searchValue: value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      page,\n      postsPerPage\n    } = this.state;\n    const postAndImage = await loadPosts();\n    this.setState({\n      posts: postAndImage.slice(page, postsPerPage),\n      allPosts: postAndImage\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      page,\n      postsPerPage,\n      allPosts,\n      searchValue\n    } = this.state;\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n    const filteredPosters = !!searchValue ? allPosts.filter(posts => {\n      return posts.title.toLowerCase().includes(searchValue.toLowerCase());\n    }) : posts;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [!!searchValue && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Search Value: \", searchValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          searchValue: searchValue,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), filteredPosters.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n        posts: filteredPosters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), filteredPosters.length == 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NO MATCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Load More Posts\",\n          onClick: this.loadMorePosts,\n          disabled: noMorePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Documents/React/projeto1/src/templates/Home/index.jsx"],"names":["Component","loadPosts","Posts","Button","TextInput","Home","state","posts","allPosts","page","postsPerPage","searchValue","loadMorePosts","nextPage","nextPosts","slice","push","setState","handleChange","e","value","target","componentDidMount","postAndImage","render","noMorePosts","length","filteredPosters","filter","title","toLowerCase","includes"],"mappings":"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","sourcesContent":["//Importação\nimport './styles.css';\n\nimport { Component } from 'react';\n\nimport {loadPosts} from '../../utils/load-posts';\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button';\nimport { TextInput } from '../../components/TextInput';\n\nexport class Home extends Component{\n  \n  state = {\n    posts: [],\n    allPosts: [],\n    page: 0,\n    postsPerPage: 9,\n    searchValue: '',\n  };\n\n  async componentDidMount(){\n    const {page, postsPerPage} = this.state;\n\n    const postAndImage = await loadPosts();\n    this.setState({ \n      posts: postAndImage.slice(page, postsPerPage), \n      allPosts: postAndImage, \n    });\n  }\n\n  loadMorePosts = () => {\n    const {\n      page,\n      postsPerPage,\n      allPosts,\n      posts\n    } = this.state;\n    const nextPage = page + postsPerPage;\n    const nextPosts = allPosts.slice(nextPage, nextPage+postsPerPage)\n    posts.push(...nextPosts);\n\n    this.setState({\n      posts, page: nextPage\n    })\n  }\n\n  handleChange = (e) => {\n    const {value} = e.target\n    this.setState({\n      searchValue: value,\n    })\n  }\n\n  render(){\n    const {posts, page, postsPerPage, allPosts, searchValue} = this.state;\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n\n    const filteredPosters = !!searchValue ? \n    allPosts.filter(posts => {\n      return posts.title.toLowerCase().includes(\n          searchValue.toLowerCase()\n        )\n    }) \n    : \n    posts;\n\n    return (\n      <section className=\"container\">\n\n        <div className=\"search-container\" >\n          {!!searchValue && (\n            <h1>Search Value: {searchValue}</h1>\n          )}\n          <TextInput searchValue={searchValue} handleChange={this.handleChange} />\n        </div>\n        \n\n        \n\n        {filteredPosters.length > 0 && (\n          <Posts posts={filteredPosters} />\n        )}\n        \n        {filteredPosters.length == 0 && (\n          <h2>NO MATCH</h2>\n        )}\n\n        <div className=\"button-container\">\n          {!searchValue && (\n            <Button \n            text=\"Load More Posts\"\n            onClick={this.loadMorePosts}\n            disabled={noMorePosts}\n          />\n          )}\n        </div>\n\n      </section>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}